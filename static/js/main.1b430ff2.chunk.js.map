{"version":3,"sources":["components/NavLink.tsx","static/text_content.ts","stores/AppStore.ts","logic/ContainerFactory.ts","elements/NavBar.tsx","static/profile_picture.png","elements/Intro.tsx","components/MilestonesContainer.tsx","components/Milestone.tsx","components/IconAndText.tsx","elements/Education.tsx","elements/WorkExperience.tsx","elements/Competences.tsx","components/ContactForm.tsx","elements/Contact.tsx","App.tsx","AppWrapper.tsx","index.js"],"names":["useStyles","makeStyles","theme","root","margin","NavLink","props","classes","href","text","className","onClick","Link","variant","color","text_content","languages","content","locale","introLink","educationLink","workExperienceLink","competencesLink","contactLink","name","business","introduction","educationHeading","workExperienceHeading","competencesHeading","programmingLanguagesHeading","frameworksAndLibrariesHeading","databasesHeading","operatingSystemsHeading","shellsHeading","contactHeading","contactDirection","subjectLabel","sendButtonLabel","educations","id","Math","random","duration","details","program","degree","workExperiences","companyType","activity","type","AppStore","options","initialState","language","localized_text_content","darkMode","setLanguage","toggleDarkMode","init","createActionAndSubscribe","x","onSetLanguage","onToggleDarkMode","this","state","find","ltc","setState","Store","ContainerFactory","container","getContainer","undefined","builder","SimpleContainerBuilder","register","c","as","build","backgroundColor","palette","background","paper","primary","main","secondary","drawer","marginRight","drawerList","paddingTop","marginLeft","NavBar","useTheme","useState","languageMenuAnchor","setLanguageMenuAnchor","drawerOpen","toggleDrawerOpen","mqMatch","useMediaQuery","breakpoints","up","appStore","resolve","storeState","useStoreState","navLinks","Fragment","IconButton","Drawer","anchor","open","onClose","List","ListItem","AppBar","Toolbar","trigger","Box","e","currentTarget","Menu","anchorEl","keepMounted","map","MenuItem","marginTop","avatar","height","spacing","width","divider","Intro","fpsLimit","interactivity","detectsOn","events","onHover","enable","parallax","force","smooth","particles","value","links","distance","opacity","move","outMode","speed","number","density","area","factor","size","twinkle","lines","frequency","Grid","direction","alignItems","item","Typography","align","Avatar","alt","src","profile_picture","Divider","milestoneGridItem","milestoneCard","MilestonesContainer","children","child","xs","sm","md","Card","CardContent","Milestone","heading","childrenFlexDirection","mi","withStyles","icon","flexDirection","textVariant","itemsAlignment","wrap","Education","gutterBottom","education","IconAndText","WorkExperience","workExperience","padding","paddingBottom","Competences","Cplusplus","Java","Csharp","Javascript","Typescript","CssThree","Html5","DotNet","Spring","ReactJs","Jquery","MaterialUi","Bootstrap","Mysql","Microsoftsqlserver","Oracle","Linux","Macos","Windows","Gnubash","Powershell","ContactForm","subject","setSubject","body","setBody","TextField","label","fullWidth","onChange","target","multiline","rows","Button","preventDefault","window","replace","Contact","marginBottom","App","Container","CssBaseline","AppWrapper","createMuiTheme","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b430ff2.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: \"0 10px\"\n    }\n}));\n\n/**\n * Props passed to the @see NavLink.\n */\ninterface INavLinkProps {\n    /**\n     * Class name.\n     */\n    className?: string;\n\n    /**\n     * Href.\n     */\n    href: string;\n\n    /**\n     * Link text.\n     */\n    text: string;\n\n    /**\n     * Executed when clicked.\n     */\n    onClick?: () => void;\n}\n\n/**\n * Navigation link.\n */\nconst NavLink: React.FunctionComponent<INavLinkProps> = (props: INavLinkProps) => {\n    const classes = useStyles();\n\n    const { href, text, className, onClick } = props;\n\n    return <Link\n        className={className ? `${classes.root} ${className}` : classes.root}\n        variant={\"button\"}\n        color={\"inherit\"}\n        href={href}\n        onClick={() => onClick && onClick()}>\n        {text}\n    </Link>;\n}\n\nexport default NavLink;","export interface MilestoneDetails {\n    id: number;\n    duration: string;\n    details: { [key: string]: string }\n}\n\nexport type LocalizedTextContent = { [key: string]: string | MilestoneDetails[] };\n\nexport interface TextLocaleAndContent {\n    locale: string;\n    content: { [key: string]: string | MilestoneDetails[] };\n}\n\nexport interface TextOptionsAndContent {\n    languages: string[];\n    content: TextLocaleAndContent[];\n}\n\nconst text_content: TextOptionsAndContent = {\n    languages: [\n        \"DE\",\n        \"EN\"\n    ],\n    content: [\n        {\n            locale: \"DE\",\n            content: {\n                introLink: \"Intro\",\n                educationLink: \"Ausbildung\",\n                workExperienceLink: \"Berufserfahrung\",\n                competencesLink: \"Kompetenzen\",\n                contactLink: \"Kontakt\",\n                name: \"David Tomic\",\n                business: \"IT-Beratung und Softwareentwicklung\",\n                introduction: \"Herzlich willkommen zu meinem Online Portfolio. Nachfolgend eine Gliederung zu meiner Ausbildung und Kompetenzen.\",\n                educationHeading: \"Ausbildung\",\n                workExperienceHeading: \"Berufserfahrung\",\n                competencesHeading: \"Kompetenzen (Auszug)\",\n                programmingLanguagesHeading: \"Programmiersprachen\",\n                frameworksAndLibrariesHeading: \"Frameworks und Programmbibliotheken\",\n                databasesHeading: \"Datenbanken\",\n                operatingSystemsHeading: \"Betriebssysteme\",\n                shellsHeading: \"Shells\",\n                contactHeading: \"Kontakt\",\n                contactDirection: \"Falls Sie Interesse an einer Projektkooperation haben, können Sie mich gerne durch folgendes Formular kontaktieren.\",\n                subjectLabel: \"Betreff\",\n                sendButtonLabel: \"Senden\",\n                educations: [\n                    {\n                        id: Math.random(),\n                        duration: \"2011 - 2013\",\n                        details: {\n                            name: \"United World College (UWC) Mostar\",\n                            program: \"IB Diploma Programme (IBDP)\",\n                            degree: \"International Baccalaureate\"\n                        }\n                    },\n                    {\n                        id: Math.random(),\n                        duration: \"2013 - 2016\",\n                        details: {\n                            name: \"Universität Wien\",\n                            program: \"Wirtschaftsinformatik\",\n                            degree: \"Bachelor of Science\"\n                        }\n                    },\n                    {\n                        id: Math.random(),\n                        duration: \"2016 - 2017\",\n                        details: {\n                            name: \"Technische Universität (TU) Berlin\",\n                            program: \"Innovation in Information and Communication Technology - Internet Technology and Architecture\",\n                            degree: \"Master of Science\"\n                        }\n                    },\n                    {\n                        id: Math.random(),\n                        duration: \"2017 - 2018\",\n                        details: {\n                            name: \"Königliche Technische Hochschule (KTH) Stockholm\",\n                            program: \"Innovation in Information and Communication Technology - Internet Technology and Architecture\",\n                            degree: \"Master of Science\"\n                        }\n                    },\n                    {\n                        id: Math.random(),\n                        duration: \"2016 - 2018\",\n                        details: {\n                            name: \"Europäisches Institut für Innovation und Technologie (EIT) Digital\",\n                            program: \"Innovation in Information and Communication Technology - Internet Technology and Architecture\",\n                            degree: \"Master of Science\"\n                        }\n                    }\n                ],\n                workExperiences: [\n                    {\n                        id: Math.random(),\n                        duration: \"2014 - 2015\",\n                        details: {\n                            companyType: \"Vermittlerfirma für Nachhilfe-Dienstleistungen\",\n                            activity: \"Nachhilfe in Informatik und Mathematik\",\n                            type: \"Geringfügig\"\n                        }\n                    },\n                    {\n                        id: Math.random(),\n                        duration: \"2015 - 2016\",\n                        details: {\n                            companyType: \"Start-up-Unternemhen\",\n                            activity: \"Beratung zum Thema Software Architektur und UML Modellierung\",\n                            type: \"Geringfügig\"\n                        }\n                    },\n                    {\n                        id: Math.random(),\n                        duration: \"2016 - 2018\",\n                        details: {\n                            companyType: \"Privates Projekt\",\n                            activity: \"Entwicklung einer Web App im Bereich Social Networking\",\n                            type: \"Hobby\"\n                        }\n                    },\n                    {\n                        id: Math.random(),\n                        duration: \"2018 - 2019\",\n                        details: {\n                            companyType: \"Flugzeughersteller\",\n                            activity: \"Entwicklung einer Netzwerklösung für Flugzeugkonnektivität\",\n                            type: \"Vollzeit\"\n                        }\n                    },\n                    {\n                        id: Math.random(),\n                        duration: \"2019 -\",\n                        details: {\n                            companyType: \"Beratungsunternehmen und Sportwagenhersteller\",\n                            activity: \"Entwicklung von Web Apps im Bereich Fahrzeugentwicklung\",\n                            type: \"Vollzeit\"\n                        }\n                    }\n                ]\n            }\n        },\n        {\n            locale: \"EN\",\n            content: {\n                introLink: \"Intro\",\n                educationLink: \"Education\",\n                workExperienceLink: \"Work experience\",\n                competencesLink: \"Competences\",\n                contactLink: \"Contact\",\n                name: \"David Tomic\",\n                business: \"IT consulting and software development\",\n                introduction: \"Welcome to my online portfolio. In the following you will find information on my education and competences.\",\n                educationHeading: \"Education\",\n                workExperienceHeading: \"Work experience\",\n                competencesHeading: \"Competences (excerpt)\",\n                programmingLanguagesHeading: \"Programming languages\",\n                frameworksAndLibrariesHeading: \"Frameworks and libraries\",\n                databasesHeading: \"Databases\",\n                operatingSystemsHeading: \"Operating systems\",\n                shellsHeading: \"Shells\",\n                contactHeading: \"Contact\",\n                contactDirection: \"If you are interested in cooperating on a project, please contact me using the form below.\",\n                subjectLabel: \"Subject\",\n                sendButtonLabel: \"Send\",\n                educations: [\n                    {\n                        id: Math.random(),\n                        duration: \"2011 - 2013\",\n                        details: {\n                            name: \"United World College (UWC) Mostar\",\n                            program: \"IB Diploma Programme (IBDP)\",\n                            degree: \"International Baccalaureate\"\n                        }\n                    },\n                    {\n                        id: Math.random(),\n                        duration: \"2013 - 2016\",\n                        details: {\n                            name: \"University of Vienna\",\n                            program: \"Business Informatics\",\n                            degree: \"Bachelor of Science\"\n                        }\n                    },\n                    {\n                        id: Math.random(),\n                        duration: \"2016 - 2017\",\n                        details: {\n                            name: \"Technical University (TU) Berlin\",\n                            program: \"Innovation in Information and Communication Technology - Internet Technology and Architecture\",\n                            degree: \"Master of Science\"\n                        }\n                    },\n                    {\n                        id: Math.random(),\n                        duration: \"2017 - 2018\",\n                        details: {\n                            name: \"Royal Institute of Technology (KTH) Stockholm\",\n                            program: \"Innovation in Information and Communication Technology - Internet Technology and Architecture\",\n                            degree: \"Master of Science\"\n                        }\n                    },\n                    {\n                        id: Math.random(),\n                        duration: \"2016 - 2018\",\n                        details: {\n                            name: \"European Institute of Innovation and Technology (EIT) Digital\",\n                            program: \"Innovation in Information and Communication Technology - Internet Technology and Architecture\",\n                            degree: \"Master of Science\"\n                        }\n                    }\n                ],\n                workExperiences: [\n                    {\n                        id: Math.random(),\n                        duration: \"2014 - 2015\",\n                        details: {\n                            companyType: \"Tutoring services broker\",\n                            activity: \"Tutoring in IT and mathematics\",\n                            type: \"Minor\"\n                        }\n                    },\n                    {\n                        id: Math.random(),\n                        duration: \"2015 - 2016\",\n                        details: {\n                            companyType: \"Startup\",\n                            activity: \"Consulting on software architecture and UML modeling\",\n                            type: \"Minor\"\n                        }\n                    },\n                    {\n                        id: Math.random(),\n                        duration: \"2016 - 2018\",\n                        details: {\n                            companyType: \"Private project\",\n                            activity: \"Social networking web app development\",\n                            type: \"Hobby\"\n                        }\n                    },\n                    {\n                        id: Math.random(),\n                        duration: \"2018 - 2019\",\n                        details: {\n                            companyType: \"Aircraft manufacturer\",\n                            activity: \"Development of a networking solution for aircraft connectivity\",\n                            type: \"Full-time\"\n                        }\n                    },\n                    {\n                        id: Math.random(),\n                        duration: \"2019 -\",\n                        details: {\n                            companyType: \"Consulting company and sports car manufacturer\",\n                            activity: \"Development of web apps used in vehicle development\",\n                            type: \"Full-time\"\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n}\n\nexport default text_content;","import { IAction, IInjectedStoreOptions, IStore, Store } from \"rfluxx\";\nimport text_content, { LocalizedTextContent, TextOptionsAndContent } from \"../static/text_content\";\n\n/**\n * Options passed to the store.\n */\nexport interface IAppStoreOptions extends IInjectedStoreOptions {\n}\n\n/**\n * State managed by the store.\n */\nexport interface IAppStoreState {\n    /**\n     * Language of the content displayed.\n     */\n    language: string;\n\n    /**\n     * Text content to be displayed.\n     */\n    text_content: TextOptionsAndContent;\n\n    /**\n     * Localized text content to be displayed.\n     */\n    localized_text_content: LocalizedTextContent;\n\n    /**\n     * Indicates whether dark mode is active.\n     */\n    darkMode: boolean;\n}\n\n/**\n * Interface for accessing @see AppStore actions. \n */\nexport interface IAppStore extends IStore<IAppStoreState> {\n    /**\n     * Sets the language of content displayed.\n     */\n    setLanguage: IAction<string>;\n\n    /**\n     * Toggles dark mode.\n     */\n    toggleDarkMode: IAction<boolean>;\n}\n\n\n/**\n * Store managing the state of the app.\n */\nexport class AppStore extends Store<IAppStoreState> implements IAppStore {\n    /**\n     * @inheritdoc\n     */\n    public readonly setLanguage: IAction<string>;\n\n    /**\n     * @inheritdoc\n     */\n    public readonly toggleDarkMode: IAction<boolean>;\n\n\n    constructor(options: IAppStoreOptions) {\n        super({\n            ...options,\n            initialState: {\n                language: \"DE\",\n                text_content,\n                localized_text_content: {},\n                darkMode: true\n            }\n        });\n\n        this.init();\n        this.setLanguage = this.createActionAndSubscribe(x => this.onSetLanguage(x));\n        this.toggleDarkMode = this.createActionAndSubscribe(x => this.onToggleDarkMode(x));\n    }\n\n    private init() {\n        const localized_text_content = this.state.text_content!.content!.find(ltc => ltc.locale && ltc.locale === this.state.language)!.content;\n        this.setState({\n            ...this.state,\n            localized_text_content\n        });\n    }\n\n    private onSetLanguage(language: string) {\n        const localized_text_content = this.state.text_content!.content!.find(ltc => ltc.locale && ltc.locale === language)!.content;\n        this.setState({\n            ...this.state,\n            language,\n            localized_text_content\n        });\n    }\n\n    private onToggleDarkMode(darkMode: boolean) {\n        this.setState({\n            ...this.state,\n            darkMode\n        });\n    }\n}","import { IContainer, SimpleContainerBuilder } from \"rfluxx\";\nimport { AppStore } from \"../stores/AppStore\";\n\n/**\n * Singleton container factory for creating and managing store dependencies.\n */\nexport class ContainerFactory {\n    /**\n     * Container.\n     */\n    public static container: IContainer;\n\n    /**\n     * Creates if needed, and returns the container.\n     */\n    public static getContainer = (): IContainer => {\n        if (ContainerFactory.container === undefined || ContainerFactory.container === null) {\n\n            const builder = new SimpleContainerBuilder();\n\n            builder.register(c => new AppStore({})).as(\"AppStore\");\n\n            ContainerFactory.container = builder.build();\n        }\n\n        return ContainerFactory.container;\n    }\n}","import React, { useState } from \"react\";\nimport { AppBar, Box, Drawer, IconButton, List, ListItem, makeStyles, Menu, MenuItem, Toolbar, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport NavLink from \"../components/NavLink\";\nimport { ContainerFactory } from \"../logic/ContainerFactory\";\nimport { AppStore } from \"../stores/AppStore\";\nimport { useStoreState } from \"rfluxx-react\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor:\n            theme.palette.type === \"dark\" ?\n                theme.palette.background.paper :\n                theme.palette.primary.main,\n        color:\n            theme.palette.type === \"dark\" ?\n                theme.palette.text.primary :\n                theme.palette.text.secondary\n    },\n    drawer: {\n        marginRight: \"auto\"\n    },\n    drawerList: {\n        paddingTop: \"56px\"\n    },\n    introLink: {\n        marginLeft: \"auto\"\n    },\n    contactLink: {\n        marginRight: \"auto\"\n    }\n}));\n\n/**\n * Props passed to the @see NavBar.\n */\ninterface INavBarProps {\n}\n\n/**\n * Navigation bar.\n */\nconst NavBar: React.FunctionComponent<INavBarProps> = (props: INavBarProps) => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [languageMenuAnchor, setLanguageMenuAnchor] = useState<Element | null>(null);\n    const [drawerOpen, toggleDrawerOpen] = useState(false);\n    const mqMatch = useMediaQuery(theme.breakpoints.up(\"md\"));\n    const appStore = ContainerFactory.getContainer().resolve<AppStore>(\"AppStore\");\n    const storeState = useStoreState(appStore);\n\n    if (!storeState) {\n        return null;\n    }\n\n    const { darkMode, text_content, localized_text_content } = storeState;\n\n    const navLinks = <React.Fragment>\n        <NavLink\n            className={classes.introLink}\n            href={\"#intro\"}\n            text={localized_text_content.introLink as string} />\n        <NavLink\n            href={\"#education\"}\n            text={localized_text_content.educationLink as string} />\n        <NavLink\n            href={\"#workExperience\"}\n            text={localized_text_content.workExperienceLink as string} />\n        <NavLink\n            href={\"#competences\"}\n            text={localized_text_content.competencesLink as string} />\n        <NavLink\n            className={classes.contactLink}\n            href={\"#contact\"}\n            text={localized_text_content.contactLink as string} />\n    </React.Fragment>;\n\n    const drawer = <React.Fragment>\n        <IconButton\n            className={classes.drawer}\n            onClick={() => {\n                toggleDrawerOpen(!drawerOpen);\n            }}>\n            <MenuIcon />\n        </IconButton>\n        <Drawer\n            anchor={\"left\"}\n            open={drawerOpen}\n            onClose={() => toggleDrawerOpen(!drawerOpen)}>\n            <List className={classes.drawerList}>\n                <ListItem>\n                    <NavLink\n                        href={\"#intro\"}\n                        text={localized_text_content.introLink as string}\n                        onClick={() => toggleDrawerOpen(!drawerOpen)} />\n                </ListItem>\n                <ListItem>\n                    <NavLink\n                        href={\"#education\"}\n                        text={localized_text_content.educationLink as string}\n                        onClick={() => toggleDrawerOpen(!drawerOpen)} />\n                </ListItem>\n                <ListItem>\n                    <NavLink\n                        href={\"#workExperience\"}\n                        text={localized_text_content.workExperienceLink as string}\n                        onClick={() => toggleDrawerOpen(!drawerOpen)} />\n                </ListItem>\n                <ListItem>\n                    <NavLink\n                        href={\"#competences\"}\n                        text={localized_text_content.competencesLink as string}\n                        onClick={() => toggleDrawerOpen(!drawerOpen)} />\n                </ListItem>\n                <ListItem>\n                    <NavLink\n                        href={\"#contact\"}\n                        text={localized_text_content.contactLink as string}\n                        onClick={() => toggleDrawerOpen(!drawerOpen)} />\n                </ListItem>\n            </List>\n        </Drawer>\n    </React.Fragment>;\n\n    return <AppBar className={classes.root}>\n        <Toolbar>\n            {mqMatch ? navLinks : drawer}\n            <IconButton\n                onClick={() => appStore.toggleDarkMode.trigger(!darkMode)}>\n                <InvertColorsIcon />\n            </IconButton>\n            <Box>\n                <IconButton onClick={(e) => {\n                    languageMenuAnchor ?\n                        setLanguageMenuAnchor(null) :\n                        setLanguageMenuAnchor(e.currentTarget)\n                }}>\n                    <LanguageIcon />\n                    <Menu\n                        anchorEl={languageMenuAnchor}\n                        open={languageMenuAnchor != null}\n                        keepMounted\n                    >\n                        {\n                            text_content.languages.map((language: string) => (\n                                <MenuItem\n                                    key={language}\n                                    onClick={() => appStore.setLanguage.trigger(language)}>\n                                    {language}\n                                </MenuItem>\n                            ))\n                        }\n                    </Menu>\n                </IconButton>\n            </Box>\n        </Toolbar>\n    </AppBar>;\n}\n\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/profile_picture.abc825db.png\";","import React from \"react\";\nimport { Avatar, Box, Divider, Grid, makeStyles, Typography, useTheme } from \"@material-ui/core\";\nimport { ContainerFactory } from \"../logic/ContainerFactory\";\nimport { AppStore } from \"../stores/AppStore\";\nimport { useStoreState } from \"rfluxx-react\";\nimport profile_picture from \"../static/profile_picture.png\";\nimport Particles from \"react-tsparticles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: \"106px\"\n    },\n    avatar: {\n        height: theme.spacing(35),\n        width: theme.spacing(35)\n    },\n    divider: {\n        margin: \"20px 0\",\n        width: \"100%\"\n    }\n}));\n\n/**\n * Props passed to the @see Intro.\n */\ninterface IIntroProps {\n}\n\n/**\n * Introduction.\n */\nconst Intro: React.FunctionComponent<IIntroProps> = (props: IIntroProps) => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const appStore = ContainerFactory.getContainer().resolve<AppStore>(\"AppStore\");\n    const storeState = useStoreState(appStore);\n\n    if (!storeState) {\n        return null;\n    }\n\n    const { localized_text_content, darkMode } = storeState;\n\n    return <React.Fragment>\n        <Particles\n            options={{\n                fpsLimit: 60,\n                interactivity: {\n                    detectsOn: \"window\",\n                    events: {\n                        onHover: {\n                            enable: true,\n                            parallax: {\n                                enable: true,\n                                force: 50,\n                                smooth: 10\n                            }\n                        }\n                    }\n                },\n                particles: {\n                    color: {\n                        value: darkMode ?\n                            theme.palette.text.primary :\n                            theme.palette.text.secondary\n                    },\n                    links: {\n                        color: {\n                            value: darkMode ?\n                                theme.palette.text.primary :\n                                theme.palette.text.secondary\n                        },\n                        distance: 200,\n                        enable: true,\n                        opacity: 0.1,\n                        width: 1.5\n                    },\n                    move: {\n                        enable: true,\n                        outMode: \"bounce\",\n                        speed: 1\n                    },\n                    number: {\n                        density: {\n                            enable: true,\n                            area: 4000,\n                            factor: 300\n                        },\n                        value: 80\n                    },\n                    opacity: {\n                        value: 0.3,\n                    },\n                    size: {\n                        random: true,\n                        value: 5,\n                    },\n                    twinkle: {\n                        lines: {\n                            enable: true,\n                            opacity: 0.6,\n                            frequency: 1\n                        },\n                        particles: {\n                            enable: true,\n                            opacity: 0.6,\n                            frequency: 1\n                        }\n                    }\n                }\n            }} />\n        <Box\n            className={classes.root}\n            id={\"intro\"}>\n            <Grid\n                container\n                direction={\"column\"}\n                alignItems={\"center\"}\n                spacing={10} >\n                <Grid item>\n                    <Grid\n                        container\n                        direction={\"column\"}\n                        spacing={2} >\n                        <Grid item>\n                            <Typography\n                                variant={\"h2\"}\n                                align={\"center\"} >\n                                {localized_text_content.name}\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography\n                                variant={\"h5\"}\n                                align={\"center\"} >\n                                {localized_text_content.business}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Avatar\n                        className={classes.avatar}\n                        alt={localized_text_content.name as string}\n                        src={profile_picture} />\n                </Grid>\n                <Grid item>\n                    <Typography\n                        variant={\"h6\"}\n                        align={\"center\"}>\n                        {localized_text_content.introduction}\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Box>\n        <Divider className={classes.divider} />\n    </React.Fragment>;\n}\n\nexport default Intro;","import React from \"react\";\nimport { Card, CardContent, Grid, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    },\n    milestoneGridItem: {\n        width: \"33%\"\n    },\n    milestoneCard: {\n        height: \"100%\"\n    }\n}));\n\n/**\n * Props passed to the @see MilestonesContainer.\n */\ninterface IMilestonesContainerProps {\n    /**\n     * Items to be displayed in the container.\n     */\n    children: React.ReactElement[];\n}\n\n/**\n * Grid container for milestones.\n */\nconst MilestonesContainer: React.FunctionComponent<IMilestonesContainerProps> = (props: IMilestonesContainerProps) => {\n    const classes = useStyles();\n    const { children } = props;\n\n    return <Grid\n        className={classes.root}\n        container\n        spacing={2}>\n        {children &&\n            children.map(child => {\n                return <Grid\n                    className={classes.milestoneGridItem}\n                    key={Math.random()}\n                    item\n                    xs={12}\n                    sm={6}\n                    md={4}>\n                    <Card className={classes.milestoneCard}>\n                        <CardContent>\n                            {child}\n                        </CardContent>\n                    </Card>\n                </Grid>\n            })\n        }\n    </Grid>;\n}\n\nexport default MilestonesContainer;","import React from \"react\";\nimport { Grid, GridDirection, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        /**\n         * Workaround for the Safari rounding issue (https://github.com/mui-org/material-ui/issues/17142).\n         * Adjust according to the used spacing!\n         */\n        \"& .MuiGrid-spacing-xs-2\": {\n            margin: \"-7px\"\n        }\n    }\n}));\n\n/**\n * Props passed to the @see Milestone.\n */\ninterface IMilestoneProps {\n    /**\n     * Heading for the milestone.\n     */\n    heading: string;\n\n    /**\n     * Items to be displayed in the milstone.\n     */\n    children: React.ReactElement[];\n\n    /**\n     * Direction in which the children should be flexed.\n     */\n    childrenFlexDirection?: GridDirection;\n}\n\n/**\n * Labeled milestone-like container for contained content.\n */\nconst Milestone: React.FunctionComponent<IMilestoneProps> = (props: IMilestoneProps) => {\n    const classes = useStyles();\n    const { heading, children, childrenFlexDirection } = props;\n\n    return <Grid\n        className={classes.root}\n        container\n        direction=\"column\"\n        spacing={2}>\n        <Grid item>\n            <Typography variant=\"body2\">\n                {heading}\n            </Typography>\n        </Grid>\n        <Grid item>\n            <Grid\n                container\n                direction={childrenFlexDirection ? childrenFlexDirection : \"column\"}\n                spacing={3}>\n                {children &&\n                    children.map(mi => {\n                        return <Grid\n                            key={Math.random()}\n                            item>\n                            {mi}\n                        </Grid>\n                    })\n                }\n            </Grid>\n        </Grid>\n    </Grid>;\n}\n\nexport default Milestone;","import React from \"react\";\nimport { Grid, GridDirection, GridItemsAlignment, Theme, Typography, TypographyVariant, withStyles, WithStyles } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => ({\n  root: {\n  },\n  icon: {\n  },\n  text: {\n  }\n});\n\n/**\n * Props passed to the @see IconAndText.\n */\ninterface IIconAndTextProps extends WithStyles<typeof styles> {\n  /**\n   * Icon to be displayed.\n   */\n  icon: React.ReactNode;\n\n  /**\n   * Text to be displayed.\n   */\n  text: string;\n\n  /**\n   * Direction in which the items should flex.\n   */\n  flexDirection?: GridDirection;\n\n  /**\n   * Variant for the text.\n   */\n  textVariant?: TypographyVariant;\n\n  /**\n   * Alignment of the items.\n   */\n  itemsAlignment?: GridItemsAlignment;\n}\n\n/**\n * Displays an icon along with text.\n */\nconst IconAndTextImpl: React.FunctionComponent<IIconAndTextProps> = (props: IIconAndTextProps) => {\n  const { classes, icon, text, flexDirection, textVariant, itemsAlignment } = props;\n\n  return <Grid\n    className={classes.root}\n    container\n    spacing={2}\n    wrap=\"nowrap\"\n    direction={flexDirection ? flexDirection : \"row\"}\n    alignItems={itemsAlignment ? itemsAlignment : undefined}>\n    <Grid\n      className={classes.icon}\n      item>\n      {icon}\n    </Grid>\n    <Grid\n      className={classes.text}\n      item>\n      <Typography variant={textVariant ? textVariant : \"overline\"}>\n        {text}\n      </Typography>\n    </Grid>\n  </Grid>\n}\n\nexport default withStyles(styles)(IconAndTextImpl);","import React from \"react\";\nimport { Box, Divider, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport { ContainerFactory } from \"../logic/ContainerFactory\";\nimport { AppStore } from \"../stores/AppStore\";\nimport { useStoreState } from \"rfluxx-react\";\nimport MilestonesContainer from \"../components/MilestonesContainer\";\nimport Milestone from \"../components/Milestone\";\nimport IconAndText from \"../components/IconAndText\";\nimport PlaceIcon from \"@material-ui/icons/Place\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { MilestoneDetails } from \"../static/text_content\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    },\n    divider: {\n        margin: \"20px 0\",\n        width: \"100%\"\n    }\n}));\n\n/**\n * Props passed to the @see Education.\n */\ninterface IEducationProps {\n}\n\n/**\n * Education.\n */\nconst Education: React.FunctionComponent<IEducationProps> = (props: IEducationProps) => {\n    const classes = useStyles();\n\n    const appStore = ContainerFactory.getContainer().resolve<AppStore>(\"AppStore\");\n    const storeState = useStoreState(appStore);\n\n    if (!storeState) {\n        return null;\n    }\n\n    const { localized_text_content } = storeState;\n\n    return <React.Fragment>\n        <Box\n            className={classes.root}\n            id={\"education\"}>\n            <Grid\n                container\n                direction={\"column\"}>\n                <Grid item>\n                    <Typography\n                        variant={\"h6\"}\n                        gutterBottom>\n                        {localized_text_content.educationHeading}\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <MilestonesContainer>\n                        {(localized_text_content.educations as MilestoneDetails[]).map(education => {\n                            return <Milestone\n                                key={education.id}\n                                heading={education.duration}>\n                                <IconAndText\n                                    icon={<PlaceIcon />}\n                                    text={education.details.name}\n                                />\n                                <IconAndText\n                                    icon={<InfoIcon />}\n                                    text={education.details.program}\n                                />\n                                <IconAndText\n                                    icon={<SchoolIcon />}\n                                    text={education.details.degree}\n                                />\n                            </Milestone>\n                        })\n                        }\n                    </MilestonesContainer>\n                </Grid>\n            </Grid>\n        </Box>\n        <Divider className={classes.divider} />\n    </React.Fragment>;\n}\n\nexport default Education;","import React from \"react\";\nimport { Box, Divider, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport { ContainerFactory } from \"../logic/ContainerFactory\";\nimport { AppStore } from \"../stores/AppStore\";\nimport { useStoreState } from \"rfluxx-react\";\nimport MilestonesContainer from \"../components/MilestonesContainer\";\nimport Milestone from \"../components/Milestone\";\nimport IconAndText from \"../components/IconAndText\";\nimport PlaceIcon from \"@material-ui/icons/Place\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { MilestoneDetails } from \"../static/text_content\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    },\n    divider: {\n        margin: \"20px 0\",\n        width: \"100%\"\n    }\n}));\n\n/**\n * Props passed to the @see WorkExperience.\n */\ninterface IWorkExperienceProps {\n}\n\n/**\n * WorkExperience.\n */\nconst WorkExperience: React.FunctionComponent<IWorkExperienceProps> = (props: IWorkExperienceProps) => {\n    const classes = useStyles();\n\n    const appStore = ContainerFactory.getContainer().resolve<AppStore>(\"AppStore\");\n    const storeState = useStoreState(appStore);\n\n    if (!storeState) {\n        return null;\n    }\n\n    const { localized_text_content } = storeState;\n\n    return <React.Fragment>\n        <Box\n            className={classes.root}\n            id={\"workExperience\"}>\n            <Grid\n                container\n                direction={\"column\"}>\n                <Grid item>\n                    <Typography\n                        variant={\"h6\"}\n                        gutterBottom>\n                        {localized_text_content.workExperienceHeading}\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <MilestonesContainer>\n                        {(localized_text_content.workExperiences as MilestoneDetails[]).map(workExperience => {\n                            return <Milestone\n                                key={workExperience.id}\n                                heading={workExperience.duration}>\n                                <IconAndText\n                                    icon={<PlaceIcon />}\n                                    text={workExperience.details.companyType}\n                                />\n                                <IconAndText\n                                    icon={<InfoIcon />}\n                                    text={workExperience.details.activity}\n                                />\n                                <IconAndText\n                                    icon={<ScheduleIcon />}\n                                    text={workExperience.details.type}\n                                />\n                            </Milestone>\n                        })\n                        }\n                    </MilestonesContainer>\n                </Grid>\n            </Grid>\n        </Box>\n        <Divider className={classes.divider} />\n    </React.Fragment>;\n}\n\nexport default WorkExperience;","import React from \"react\";\nimport { Box, Divider, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport { ContainerFactory } from \"../logic/ContainerFactory\";\nimport { AppStore } from \"../stores/AppStore\";\nimport { useStoreState } from \"rfluxx-react\";\nimport MilestonesContainer from \"../components/MilestonesContainer\";\nimport Milestone from \"../components/Milestone\";\nimport IconAndText from \"../components/IconAndText\";\nimport { Bootstrap, Cplusplus, Csharp, CssThree, DotNet, Gnubash, Html5, Java, Javascript, Jquery, Linux, Macos, MaterialUi, Microsoftsqlserver, Mysql, Oracle, Powershell, ReactJs, Spring, Typescript, Windows } from \"@icons-pack/react-simple-icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        \"& .MuiGrid-spacing-xs-3 > .MuiGrid-item\": {\n            padding: \"11px\"\n        }\n    },\n    divider: {\n        margin: \"20px 0\",\n        width: \"100%\"\n    },\n    icon: {\n        paddingBottom: \"0 !important\"\n    },\n    text: {\n        padding: \"0px 5px !important\"\n    }\n}));\n\n/**\n * Props passed to the @see Competences.\n */\ninterface ICompetencesProps {\n}\n\n/**\n * Competences.\n */\nconst Competences: React.FunctionComponent<ICompetencesProps> = (props: ICompetencesProps) => {\n    const classes = useStyles();\n\n    const appStore = ContainerFactory.getContainer().resolve<AppStore>(\"AppStore\");\n    const storeState = useStoreState(appStore);\n\n    if (!storeState) {\n        return null;\n    }\n\n    const { localized_text_content } = storeState;\n\n    return <React.Fragment>\n        <Box\n            className={classes.root}\n            id={\"competences\"}>\n            <Grid\n                container\n                direction={\"column\"}>\n                <Grid item>\n                    <Typography\n                        variant={\"h6\"}\n                        gutterBottom>\n                        {localized_text_content.competencesHeading}\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <MilestonesContainer>\n                        <Milestone\n                            heading={localized_text_content.programmingLanguagesHeading as string}\n                            childrenFlexDirection={\"row\"}>\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<Cplusplus size={50} />}\n                                text={\"C++\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<Java size={50} />}\n                                text={\"Java\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<Csharp size={50} />}\n                                text={\"C#\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<Javascript size={50} />}\n                                text={\"JavaScript\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<Typescript size={50} />}\n                                text={\"TypeScript\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<CssThree size={50} />}\n                                text={\"CSS\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<Html5 size={50} />}\n                                text={\"HTML\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                        </Milestone>\n                        <Milestone\n                            heading={localized_text_content.frameworksAndLibrariesHeading as string}\n                            childrenFlexDirection={\"row\"}>\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<DotNet size={50} />}\n                                text={\".NET\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<Spring size={50} />}\n                                text={\"Spring\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<ReactJs size={50} />}\n                                text={\"React\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<Jquery size={50} />}\n                                text={\"jQuery\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<MaterialUi size={50} />}\n                                text={\"Material-UI\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<Bootstrap size={50} />}\n                                text={\"Bootstrap\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                        </Milestone>\n                        <Milestone\n                            heading={localized_text_content.databasesHeading as string}\n                            childrenFlexDirection={\"row\"}>\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<Mysql size={50} />}\n                                text={\"MySQL\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<Microsoftsqlserver size={50} />}\n                                text={\"MS SQL Server\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<Oracle size={50} />}\n                                text={\"Oracle Database\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                        </Milestone>\n                        <Milestone\n                            heading={localized_text_content.operatingSystemsHeading as string}\n                            childrenFlexDirection={\"row\"}>\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<Linux size={50} />}\n                                text={\"Linux\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<Macos size={50} />}\n                                text={\"macOS\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<Windows size={50} />}\n                                text={\"MS Windows\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                        </Milestone>\n                        <Milestone\n                            heading={localized_text_content.shellsHeading as string}\n                            childrenFlexDirection={\"row\"}>\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<Gnubash size={50} />}\n                                text={\"Bash\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                            <IconAndText\n                                classes={{\n                                    icon: classes.icon,\n                                    text: classes.text\n                                }}\n                                icon={<Powershell size={50} />}\n                                text={\"PowerShell\"}\n                                flexDirection={\"column\"}\n                                itemsAlignment={\"center\"}\n                            />\n                        </Milestone>\n                    </MilestonesContainer>\n                </Grid>\n            </Grid>\n        </Box>\n        <Divider className={classes.divider} />\n    </React.Fragment>;\n}\n\nexport default Competences;","import React, { useState } from \"react\";\nimport { Button, Card, CardContent, Grid, makeStyles, TextField, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    }\n}));\n\n/**\n * Props passed to the @see ContactForm.\n */\ninterface IContactFormProps {\n    /**\n     * Heading for the contact form.\n     */\n    contactHeading: string;\n\n    /**\n     * Direction to initiate contact.\n     */\n    contactDirection: string;\n\n    /**\n     * Label for the subject field.\n     */\n    subjectLabel: string;\n\n    /**\n     * Label for the send button.\n     */\n    sendButtonLabel: string;\n}\n\n/**\n * Contact form.\n */\nconst ContactForm: React.FunctionComponent<IContactFormProps> = (props: IContactFormProps) => {\n    const classes = useStyles();\n\n    const { contactHeading, contactDirection, subjectLabel, sendButtonLabel } = props;\n\n    const to = \"david.tomic11@gmail.com\";\n    const [subject, setSubject] = useState(\"\");\n    const [body, setBody] = useState(\"\");\n\n    const onSend = () => {\n        window.open(`mailto:${to}?subject=${subject}&body=${body.replace(/(?:\\r\\n|\\r|\\n)/g, \"%0D%0A\")}`);\n        setSubject(\"\");\n        setBody(\"\");\n    }\n\n    return <Grid\n        className={classes.root}\n        container\n        direction=\"column\">\n        <Grid item>\n            <Typography\n                variant=\"h6\"\n                gutterBottom>\n                {contactHeading}\n            </Typography>\n        </Grid>\n        <Grid item>\n            <Card>\n                <CardContent>\n                    <Grid\n                        container\n                        direction={\"column\"}\n                        spacing={3}>\n                        <Grid item>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom>\n                                {contactDirection}\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <TextField\n                                label={subjectLabel}\n                                variant={\"outlined\"}\n                                fullWidth\n                                value={subject}\n                                onChange={(e) => setSubject(e.target.value)} />\n                        </Grid>\n                        <Grid item>\n                            <TextField\n                                variant={\"outlined\"}\n                                fullWidth\n                                multiline\n                                rows={10}\n                                value={body}\n                                onChange={(e) => setBody(e.target.value)} />\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                variant={\"contained\"}\n                                color={\"secondary\"}\n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    onSend();\n                                }}>\n                                {sendButtonLabel}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        </Grid>\n    </Grid>;\n}\n\nexport default ContactForm;","import React from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport { ContainerFactory } from \"../logic/ContainerFactory\";\nimport { AppStore } from \"../stores/AppStore\";\nimport { useStoreState } from \"rfluxx-react\";\nimport ContactForm from \"../components/ContactForm\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    },\n    divider: {\n        margin: \"20px 0\",\n        width: \"100%\"\n    }\n}));\n\n/**\n * Props passed to the @see Contact.\n */\ninterface IContactProps {\n}\n\n/**\n * Contact.\n */\nconst Contact: React.FunctionComponent<IContactProps> = (props: IContactProps) => {\n    const classes = useStyles();\n\n    const appStore = ContainerFactory.getContainer().resolve<AppStore>(\"AppStore\");\n    const storeState = useStoreState(appStore);\n\n    if (!storeState) {\n        return null;\n    }\n\n    const { localized_text_content } = storeState;\n\n    return <React.Fragment>\n        <Box\n            className={classes.root}\n            id={\"contact\"}>\n            <ContactForm\n                contactHeading={localized_text_content.contactHeading as string}\n                contactDirection={localized_text_content.contactDirection as string}\n                subjectLabel={localized_text_content.subjectLabel as string}\n                sendButtonLabel={localized_text_content.sendButtonLabel as string} />\n        </Box>\n    </React.Fragment>;\n}\n\nexport default Contact;","import React from \"react\";\nimport { Container, CssBaseline, makeStyles } from \"@material-ui/core\";\nimport NavBar from \"./elements/NavBar\";\nimport { ContainerFactory } from \"./logic/ContainerFactory\";\nimport { useStoreState } from \"rfluxx-react\";\nimport { AppStore } from \"./stores/AppStore\";\nimport Intro from \"./elements/Intro\";\nimport Education from \"./elements/Education\";\nimport WorkExperience from \"./elements/WorkExperience\";\nimport Competences from \"./elements/Competences\";\nimport Contact from \"./elements/Contact\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTypography-gutterBottom\": {\n      marginBottom: \"1em\"\n    }\n  }\n}));\n\n/**\n * Props passed to the @see App.\n */\ninterface IAppProps {\n}\n\nconst App: React.FunctionComponent<IAppProps> = (props: IAppProps) => {\n  const classes = useStyles();\n\n  const appStore = ContainerFactory.getContainer().resolve<AppStore>(\"AppStore\");\n  const storeState = useStoreState(appStore);\n\n  if (!storeState) {\n    return null;\n  }\n\n  return <Container\n    className={classes.root}\n    id={\"app\"}>\n    <CssBaseline />\n    <NavBar />\n    <Intro />\n    <Education />\n    <WorkExperience />\n    <Competences />\n    <Contact />\n  </Container>;\n}\n\nexport default App;\n","import \"./index.css\";\nimport React from \"react\";\nimport App from \"./App\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { useStoreState } from \"rfluxx-react\";\nimport { AppStore } from \"./stores/AppStore\";\nimport { ContainerFactory } from \"./logic/ContainerFactory\";\n\nconst AppWrapper: React.FunctionComponent = () => {\n  const appStore = ContainerFactory.getContainer().resolve<AppStore>(\"AppStore\");\n  const storeState = useStoreState(appStore);\n\n  if (!storeState) {\n    return null;\n  }\n\n  const { darkMode } = storeState;\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#c0c4b4\"\n      },\n      secondary: {\n        main: \"#221e33\"\n      },\n      type: darkMode ? \"dark\" : \"light\"\n    }\n  });\n\n  return <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>;\n}\n\nexport default AppWrapper;\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppWrapper from \"./AppWrapper\";\n\nReactDOM.render(\n  <AppWrapper />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}